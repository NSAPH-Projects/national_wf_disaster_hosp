wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
glimpse(wf_dat)
View(wf_dat[1:100,])
dim(wf_dat)
dim(wf_dat)
View(wf_dat)
pacman::p_load(tidyverse, here, sfarrow, sf)
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
View(wf_dat)
glimpse(wf_dat)
sum(is.na(wf_dat$wildfire_ignition_date))
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date))
View(wf_dat)
?floor_dat
?floor_date
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month'))
View(wf_dat)
mutate(max_month_exposed = lubridate::floor_date(wildfire_ignition_date_max, unit = 'month')
wf_dat <- wf_dat %>%
wf_dat <- wf_dat %>%
mutate(max_month_exposed = lubridate::floor_date(wildfire_ignition_date_max, unit = 'month'))
View(wf_dat)
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01"))
View(wf_dat)
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01"))
wfbz_disasters <- st_transform(wfbz_disasters, crs = 3857)  # Use a CRS with meters as units
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
# Make files
main <- wf_dat %>% select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main)
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
# Make files
main <- wf_dat %>% select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main)
glimpse(main)
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
st_write(main[[i]],
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", i, ".geojson")
),
driver = "GeoJSON")
lapply(seq_along(main), function(i) {
st_write(main[[i]],
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", i, ".geojson")
),
driver = "GeoJSON")
})
glimpse(wf_dat)
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
glimpse(wf_dat)
min(wf_dat$wildfire_ignition_date)
max(wf_dat$wildfire_ignition_date)
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
7*12
# Load the tigris package
library(tigris)
# Set options to cache the data locally
options(tigris_use_cache = TRUE)
# Download 2020 ZCTAs
zctas_2020 <- zctas(year = 2020)
# View the first few rows
head(zctas_2020)
zctas_2020 <- zctas_2020 %>% select(ID_spatial_unit = ZCTA5CE20)
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/00_download_save_2020_zctas.R")
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/00_download_save_2020_zctas.R")
# Load the tigris package
library(tigris)
library(sf)
# Set options to cache the data locally
options(tigris_use_cache = TRUE)
# Download 2020 ZCTAs
zctas_2020 <- zctas(year = 2020)
# View the first few rows
head(zctas_2020)
zctas_2020 <- zctas_2020 %>% select(ID_spatial_unit = ZCTA5CE20)
zctas_2020
?st_write
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/00_download_save_2020_zctas.R")
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/00_download_save_2020_zctas.R")
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
larger <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_larger,
month_exposed)
larger <-
larger %>%
group_by(month_exposed) %>%
group_split()
lapply(seq_along(larger), function(i) {
# Extract the unique month for the group
unique_month <- unique(larger[[i]]$month_exposed)
# Remove the month_exposed column
larger[[i]] <- larger[[i]] %>% select(-month_exposed)
# Write the file with the unique month in the filename
st_write(larger[[i]],
here(
"local_data",
"monthly_wf_exposure",
"sensitivity_larger",
paste0("month_", unique_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
})
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
months
month = months[[1]]
month
main_mon <- main %>% filter(month_exposed == month)
main_mon <- wf_dat %>% filter(month_exposed == month)
main_mon
class(main_mon)
View(main_mon)
pacman::p_load(tidyverse, here, sfarrow, sf)
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
# Make monthly files ------------------------------------------------------
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Assign buffers ----------------------------------------------------------
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
# Main analysis -----------------------------------------------------------
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
months
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
# Make monthly files ------------------------------------------------------
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Assign buffers ----------------------------------------------------------
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
# Main analysis -----------------------------------------------------------
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", format(month, "%Y-%m"), ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
# Make monthly files ------------------------------------------------------
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Assign buffers ----------------------------------------------------------
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
# Main analysis -----------------------------------------------------------
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
month = months[[1]]
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
month = months[[12]]
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
# Make monthly files ------------------------------------------------------
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Assign buffers ----------------------------------------------------------
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
# Main analysis -----------------------------------------------------------
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", formatted_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
# Divide wf disaster data into monthly files to create monthly exposure
# This will be based on ignition dates only
# Libraries ---------------------------------------------------------------
pacman::p_load(tidyverse, here, sfarrow, sf)
# Read --------------------------------------------------------------------
wf_dat <- st_read(here('local_data', 'wfbz_disasters.geojson'))
# Make monthly files ------------------------------------------------------
wf_dat <-
wf_dat %>%
mutate(month_exposed = lubridate::floor_date(wildfire_ignition_date, unit = 'month')) %>%
filter(month_exposed >= as.Date("2000-01-01") & month_exposed < as.Date("2019-01-01"))
# Assign buffers ----------------------------------------------------------
wf_dat <- st_transform(wf_dat, crs = 3857)  # Use a CRS with meters as units
# Calculate the area of each geometry (in square meters)
wf_dat <- wf_dat %>%
mutate(wildfire_area = as.numeric(st_area(geometry)))
# assign buffer distances based on wildfire area
wf_dat <- wf_dat %>%
mutate(
buffer_dist_main = case_when(wildfire_area < 1000 ~ 5000, wildfire_area >= 1000 ~ 10000),
buffer_dist_smaller = case_when(wildfire_area < 1000 ~ 3000, wildfire_area >= 1000 ~ 5000),
buffer_dist_larger = case_when(wildfire_area < 1000 ~ 10000, wildfire_area >= 1000 ~ 20000)
)
months <- seq(as.Date("2000-01-01"), as.Date("2018-12-01"), by = "month")
# Main analysis -----------------------------------------------------------
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (month in months) {
print(month)
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", formatted_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
print(month)
formatted_month <- format(month, "%Y-%m")
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", formatted_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
formatted_month <- format(month, "%Y-%m")
print(month)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", formatted_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", formatted_month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
for (month in months) {
main_mon <- wf_dat %>%
filter(month_exposed == month) %>%
select(-month_exposed)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", month, ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
main <-
wf_dat %>%
select(ID_climate_hazard = wildfire_id,
buffer_dist = buffer_dist_main,
month_exposed)
for (i in 1:length(months)) {
main_mon <- wf_dat %>%
filter(month_exposed == months[i]) %>%
select(-month_exposed)
st_write(
main_mon,
here(
"local_data",
"monthly_wf_exposure",
"main_analysis",
paste0("month_", months[i], ".geojson")
),
driver = "GeoJSON",
delete_dsn = TRUE
)
}
source("/Volumes/squirrel-utopia/national_wf_disaster_hosp/code/01_make_monthly_wf_files.R")
